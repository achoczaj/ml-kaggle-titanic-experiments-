tail(mtcars, 3)
mtcars$mpg
mean(mtcars$mpg)
getwd()
getwd()
?setwd
source('~/.active-rstudio-document')
statesInfo <- read.csv(\1. EDA Course Materials\EDA_Course_Materials\lesson2\reddit.csv")
statesInfo <- read.csv(/1. EDA Course Materials/EDA_Course_Materials/lesson2/reddit.csv")
statesInfo <- read.csv(/1. EDA Course Materials/EDA_Course_Materials/lesson2/stateData")
statesInfo <- read.csv("/1. EDA Course Materials/EDA_Course_Materials/lesson2/stateData")
statesInfo <- read.csv("/1. EDA Course Materials/EDA_Course_Materials/lesson2/stateData.csv")
statesInfo <- read.csv("stateData.csv")
View(statesInfo)
subset(statesInfo, state.region == 1)
statesInfo[statesInfo$state.region == 1,]
stateSubsetFunct <- subset(statesInfo, state.region == 1)
head(stateSubsetFunct, 2)
dim(stateSubsetFunct)
stateSubsetBracket <- statesInfo[statesInfo$state.region == 1,]
head(stateSubsetBracket, 2)
dim(stateSubsetBracket)
View(stateSubsetBracket)
stateSmallestIlliteracyRate <- subset(statesInfo, state.illiteracy < 0.5)
dim(stateSubsetFunct)
stateSmallestIlliteracyRate <- subset(statesInfo, illiteracy < 0.5)
View(stateSmallestIlliteracyRate)
View(stateSmallestIlliteracyRate)
stateSmallestIlliteracyRate <- subset(statesInfo, illiteracy <= 0.5)
stateSmallestIlliteracyRate <- subset(statesInfo, illiteracy == 0.5)
stateSmallestIlliteracyRate <- subset(statesInfo, illiteracy == 0.5)
stateSmallestIlliteracyRate
dim(stateSubsetFunct)
stateTopMurderRate <- subset(statesInfo, murder > 10)
stateTopMurderRate
dim(stateTopMurderRate)
stateTopMurderRate <- subset(statesInfo, murder > 12)
stateTopMurderRate
dim(stateTopMurderRate)
```{r}
summary(mtcars)
mtcars
efficient <- subset(mtcars, mpg >= 23)
efficient
dim(efficient)
subset(mtcars, mpg > 30 & hp > 100)
subset(mtcars, mpg < 14 | disp > 390)
subset(mtcars, qsec <= 16.90)
lightCars <- subset(mtcars, wt <= 2000)
rs <- subset(mtcars, wt <= 2000)
dim(lightCars)
lightCars
lightCars <- subset(mtcars, wt <= 2.000)
dim(lightCars)
lightCars
mtcars$year <- 1974
View(mtcars)
View(mtcars)
mtcars <- subset(mtcars, select = -year)
mtcars$year <- c(1973, 1974)
mtcars$year
mtcars$year
mtcars <- subset(mtcars, select = -year)
mtcars$wt
cond <- mtcars$wt < 3
cond
mtcars$weight_class <- ifelse(cond, 'light', 'average')
mtcars$weight_class
cond <- mtcars$wt > 3.5
mtcars$weight_class <- ifelse(cond, 'heavy', mtcars$weight_class)
mtcars$weight_class
rm(cond)
rm(efficient)
install.packages('knitr', dependencies = T)
library(knitr)
install.packages("knitr", dependencies = T)
subset(mtcars, mpg >= 30 | hp < 60)
reddit <- read.csv(reddit.csv)
reddit <- read.csv("reddit.csv")
reddit <- read.csv("reddit.csv")
str(reddit)
table(reddit$employment.status)
summary(reddit)
str(reddit)
levels(reddit$age.range)
library(ggplot2)
gplot(data = reddit,x = age.range)
qplot(data = reddit,x = age.range)
# Load from URL
income <- read.csv("http://datasets.flowingdata.com/tuts/2015/load-data/ACS_13_5YR_S1903.csv",
stringsAsFactors=FALSE, sep=",", colClasses=c("GEO.id2"="character"))
head(income)
dim(income)
names(income)
str(income)
stringsAsFactors=FALSE, sep=",", colClasses=c("GEO.id2"="character"))
stringsAsFactors=FALSE, sep=",", colClasses=c("GEO.id2"="character"))
income <- read.csv("http://datasets.flowingdata.com/tuts/2015/load-data/ACS_13_5YR_S1903.csv", stringsAsFactors=FALSE, sep=",", colClasses=c("GEO.id2"="character"))
head(income)
dim(income)
str(income)
summary(income)
source('C:/Users/Arek/Desktop/Develop tools/R/- R - projects/income.R', encoding = 'UTF-8')
income_total <- income[,1:7]
head(income_total)
dim(income_total)
income_upper <- subset(income_total, HC02_EST_VC02 >= 58985)
income_without_na <- na.omit(income)
income_without_na
income_without_na <- na.omit(income_total)
income_without_na
names(income_total) <- c("id", "FIPS", "name", "households", "households_moe", "med_income", "med_income_moe")
head(income_total)
income_total$med_min <- income_total$med_income - income_total$med_income_moe
income_total$med_max <- income_total$med_income + income_total$med_income_moe
income_total$med_min <- income_total$med_min / 1000
income_total$med_max <- income_total$med_max / 1000
income2008 <- read.csv("data/ACS_08_3YR_S1903/ACS_08_3YR_S1903.csv",
stringsAsFactors=FALSE, sep=",", colClasses=c("GEO.id2"="character"))
income2008 <- read.csv("http://datasets.flowingdata.com/tuts/2015/load-data/ACS_08_3YR_S1903/ACS_08_3YR_S1903.csv",
stringsAsFactors=FALSE, sep=",", colClasses=c("GEO.id2"="character"))
reddit <- read.csv("reddit.csv")
table(reddit$employment.status)
summary(reddit)
str(reddit)
levels(reddit$age.range)
source('C:/Users/Arek/Desktop/Develop tools/R/- R - projects/1. EDA Course Materials/EDA_Course_Materials/lesson2/reddit.R')
str(reddit)
levels(reddit$age.range)
qplot(data = reddit, x = age.range)
source('C:/Users/Arek/Desktop/Develop tools/R/- R - projects/1. EDA Course Materials/EDA_Course_Materials/lesson2/reddit.R')
library(ggplot2)
qplot(data = reddit, x = age.range)
reddit$age.range <- factor(reddit$age.range, levels = c("Under 18", "18-24", "25-34", "35-44", "45-54", "55-64", "65 or Above"))
qplot(data = reddit, x = age.range)
getwd()
trendsData <- read.csv("report.csv", # the file we want to read in
skip=4,      # skip the first 4 lines
nrow=582-5)
View(trendsData)
trendsData
head(trendsData)
substring(trendsData$Week, first=1, last=4)
trendsData$Year <- substring(trendsData$Week, first=1, last=4)
trendsData$Year
trendsData$Year <- as.numeric(trendsData$Year)
trendsData$Year
trendsData2012 <- subset(trendsData, Year == 2012)
trendsData2012
head(trendsData2012)
sum(trendsData2012$X2013)
sum(trendsData2012$X2011)
sum(trendsData2012$X2013) / sum(trendsData2012$X2011)
getwd()
allFileNames <- list.files("Trends")
allFileNames
substring(allFileNames, first=1, last=2)
fullFilename <- "report.csv"
trendsData <- read.csv(fullFilename, skip=4, nrow=586-5)
trendsData$Year <- substring(trendsData$Week, first=1, last=4)
trendsData$Year <- as.numeric(trendsData$Year)
trendsData2012 <- subset(trendsData, Year == 2012)
foi <- sum(trendsData2012$X2013) / sum(trendsData2012$X2011)
print(foi)
fullFilename <- "Trends/AR.csv" # change this line
trendsData <- read.csv(fullFilename, skip=4, nrow=476-5) # change this line
trendsData$Year <- substring(trendsData$Week, first=1, last=4)
trendsData$Year <- as.numeric(trendsData$Year)
trendsData2012 <- subset(trendsData, Year == 2012)
foi <- sum(trendsData2012$X2013) / sum(trendsData2012$X2011)
print(foi)
allFileNames <- list.files("Trends") # change this line
for (fullFilename in allFileNames) { # change this line
#fullFilename <- "Trends/AR.csv" # change this line
trendsData <- read.csv(fullFilename, skip=4, nrow=476-5)
trendsData$Year <- substring(trendsData$Week, first=1, last=4)
trendsData$Year <- as.numeric(trendsData$Year)
trendsData2012 <- subset(trendsData, Year == 2012)
foi <- sum(trendsData2012$X2013) / sum(trendsData2012$X2011)
print(foi)
source('~/.active-rstudio-document')
## R SCRIPT:
allFileNames <- list.files("Trends")
for (filename in allFileNames) {
fullFilename <- paste0("Trends/", filename) # change this line
trendsData <- read.csv(fullFilename, skip=4, nrow=476-5)
trendsData$Year <- substring(trendsData$Week, first=1, last=4)
trendsData$Year <- as.numeric(trendsData$Year)
trendsData2012 <- subset(trendsData, Year == 2012)
foi <- sum(trendsData2012$X2013) / sum(trendsData2012$X2011)
print(foi)
}
## END OF SCRIPT
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
## R SCRIPT:
fullFilename <- "Trends/AR.csv" # change this line
trendsData <- read.csv(fullFilename, skip=4, nrow=476-5) # change this line
trendsData$Year <- substring(trendsData$Week, first=1, last=4)
trendsData$Year <- as.numeric(trendsData$Year)
trendsData2012 <- subset(trendsData, Year == 2012)
foi <- sum(trendsData2012$X2013) / sum(trendsData2012$X2011)
print(foi)
## END OF SCRIPT
source('C:/Users/Arek/Desktop/Develop tools/R/- R - projects/CalcFOI.R')
source('C:/Users/Arek/Desktop/Develop tools/R/- R - projects/CalcFOI.R')
source('C:/Users/Arek/Desktop/Develop tools/R/- R - projects/CalcFOI.R')
## R SCRIPT:
fullFilename <- "report.csv"
trendsData <- read.csv(fullFilename, skip=4, nrow=586-5)
trendsData$Year <- substring(trendsData$Week, first=1, last=4)
trendsData$Year <- as.numeric(trendsData$Year)
trendsData2012 <- subset(trendsData, Year == 2012)
foi <- sum(trendsData2012$X2013) / sum(trendsData2012$X2011)
print(foi)
## END OF SCRIPT
## R SCRIPT:
fullFilename <- "report.csv"
trendsData <- read.csv(fullFilename, skip=4, nrow=586-5)
trendsData$Year <- substring(trendsData$Week, first=1, last=4)
trendsData$Year <- as.numeric(trendsData$Year)
trendsData2012 <- subset(trendsData, Year == 2012)
foi <- sum(trendsData2012$X2013) / sum(trendsData2012$X2011)
print(foi)
## END OF SCRIPT
## R SCRIPT:
allFileNames <- list.files("Trends")
for (filename in allFileNames) {
fullFilename <- paste0("Trends/", filename) # change this line
trendsData <- read.csv(fullFilename, skip=4, nrow=476-5)
trendsData$Year <- substring(trendsData$Week, first=1, last=4)
trendsData$Year <- as.numeric(trendsData$Year)
trendsData2012 <- subset(trendsData, Year == 2012)
foi <- sum(trendsData2012$X2013) / sum(trendsData2012$X2011)
print(foi)
}
## END OF SCRIPT
## END OF SCRIPT
source('C:/Users/Arek/Desktop/Develop tools/R/- R - projects/CalcFOI.R', encoding = 'UTF-8')
## R SCRIPT:
allFileNames <- list.files("Trends")
allFOIs <- NULL
for (filename in allFileNames) {
fullFilename <- paste0("Trends/", filename)
trendsData <- read.csv(fullFilename, skip=4, nrow=476-5)
trendsData$Year <- substring(trendsData$Week, first=1, last=4)
trendsData$Year <- as.numeric(trendsData$Year)
trendsData2012 <- subset(trendsData, Year == 2012)
foi <- sum(trendsData2012$X2013) / sum(trendsData2012$X2011)
country <- substring(filename, first=1, last=2)  # extract the
# country code from
# the filename
foiRow <- data.frame(Country=country, FOI=foi) # add another column
# ‘Country’ which
# contains the country
# code
allFOIs <- rbind(allFOIs, foiRow)
}
## END OF SCRIPT
## R SCRIPT:
allFileNames <- list.files("Trends")
allFOIs <- NULL
for (filename in allFileNames) {
fullFilename <- paste0("Trends/", filename)
trendsData <- read.csv(fullFilename, skip=4, nrow=476-5)
trendsData$Year <- substring(trendsData$Week, first=1, last=4)
trendsData$Year <- as.numeric(trendsData$Year)
trendsData2012 <- subset(trendsData, Year == 2012)
foi <- sum(trendsData2012$X2013) / sum(trendsData2012$X2011)
country <- substring(filename, first=1, last=2)  # extract the
# country code from
# the filename
foiRow <- data.frame(Country=country, FOI=foi) # add another column
# ‘Country’ which
# contains the country
# code
allFOIs <- rbind(allFOIs, foiRow)
}
## END OF SCRIPT
allFOIs
source('C:/Users/Arek/Desktop/Develop tools/R/- R - projects/1. futurelearn.com-BIG_DATA_Uni_of_WARWICK/week 9 - Do richer countries Google for more information about the future/temp.R')
View(gdpPerCap)
View(gdpPerCap)
head(gdpPerCap)
names(gdpPerCap) <- c("Country", "GDP_PC")
names(gdpPerCap) <- c("Country", "GDP_PC")
head(gdpPerCap)
str(gdpPerCap)
gdpPerCap$GDP_PC <- substring(gdpPerCap$GDP_PC, first=2)
head(gdpPerCap)
gdpPerCap$GDP_PC <- sub(pattern=",",        # find "," (comma)
replacement="",     # replace it with "" (nothing)
x=gdpPerCap$GDP_PC)
head(gdpPerCap)
gdpPerCap$GDP_PC <- as.numeric(gdpPerCap$GDP_PC)
head(gdpPerCap)
str(gdpPerCap)
head(allFOIs)
install.packages("countrycode")
library(countrycode)
gdpPerCap$Country <- countrycode(gdpPerCap$Country,  # change this data
origin="country.name",  # from a name
destination="iso2c")    # to a 2-char code
head(gdpPerCap)
foiGDP <- merge(allFOIs, gdpPerCap)
head(foiGDP)
library(ggplot2)
ggplot(data=foiGDP,   # Make a plot using our FOI and GDP data
aes(x=FOI ,       # with FOI on the x-axis
y=GDP_PC)) +  # and GDP_PC on the y-axis
geom_point()      # Plot each of the points
cor.test(foiGDP$FOI, foiGDP$GDP_PC)
gdpPerCap$Country <- countrycode(gdpPerCap$Country,  # change this data
origin="country.name",  # from a name
destination="iso2c")
View(gdpPerCap)
source('C:/Users/Arek/Desktop/Develop tools/R/- R - projects/1. futurelearn.com-BIG_DATA_Uni_of_WARWICK/week 9 - Do richer countries Google for more information about the future/temp.R', encoding = 'UTF-8')
source('C:/Users/Arek/Desktop/Develop tools/R/- R - projects/1. futurelearn.com-BIG_DATA_Uni_of_WARWICK/week 8 - Googling for the future which countries are the most forward looking/CalcFOI.R', encoding = 'UTF-8')
source('C:/Users/Arek/Desktop/Develop tools/R/- R - projects/1. futurelearn.com-BIG_DATA_Uni_of_WARWICK/week 9 - Do richer countries Google for more information about the future/temp.R', encoding = 'UTF-8')
install.packages("countrycode")
source('C:/Users/Arek/Desktop/Develop tools/R/- R - projects/1. futurelearn.com-BIG_DATA_Uni_of_WARWICK/week 9 - Do richer countries Google for more information about the future/temp.R', encoding = 'UTF-8')
gdpPerCap$Country <- countrycode(gdpPerCap$Country,  # change this data
origin="country.name",  # from a name
destination="iso2c")
head(gdpPerCap)
View(gdpPerCap)
install.packages("countrycode")
View(gdpPerCap)
library(countrycode)
gdpPerCap$Country <- countrycode(gdpPerCap$Country,  # change this data
origin="country.name",  # from a name
destination="iso2c")
View(gdpPerCap)
source('C:/Users/Arek/Desktop/Develop tools/R/- R - projects/1. futurelearn.com-BIG_DATA_Uni_of_WARWICK/week 8 - Googling for the future which countries are the most forward looking/CalcFOI.R', encoding = 'UTF-8')
gdpPerCap <- read.csv("rawdata_2004.txt",
sep="\t",    # columns are separated with tabs
header=F,    # no column names are given,
row.names=1) # row names (numbers) are in the
View(gdpPerCap)
names(gdpPerCap) <- c("Country", "GDP_PC")
gdpPerCap$GDP_PC <- substring(gdpPerCap$GDP_PC, first=2)
gdpPerCap$GDP_PC <- sub(pattern=",",        # find "," (comma)
replacement="",     # replace it with "" (nothing)
x=gdpPerCap$GDP_PC)
gdpPerCap$GDP_PC <- as.numeric(gdpPerCap$GDP_PC)
library(countrycode)
gdpPerCap$Country <- countrycode(gdpPerCap$Country, origin="country.name", destination="iso2c")
foiGDP <- merge(allFOIs, gdpPerCap)
library(ggplot2)
ggplot(data=foiGDP,   # Make a plot using our FOI and GDP data
aes(x=FOI ,       # with FOI on the x-axis
y=GDP_PC)) +  # and GDP_PC on the y-axis
geom_point()
cor.test(foiGDP$FOI, foiGDP$GDP_PC)
View(foiGDP)
View(foiRow)
View(foiGDP)
View(trendsData)
View(trendsData2012)
install.packages("h2o")
library(h2o)
localH2o = h2o.init(ip = "127.0.0.1", port = 54321)
source('C:/Users/Arek/Desktop/Develop tools/R/- R - projects/temp.R')
library(h2o)
localH2o = h2o.init(ip = "127.0.0.1", port = 54321)
h2o.shutdown()
h2o.init(nthreads = -1)
x <- 4
class(x)
x <- 4
class(x)
x <- 4:6
class(x)
x
as.numeric(x)
class(x)
x <- c(4, "a", TRUE)
class(x)
x <- (1,3,5)
as.numeric(x)
x
x <- 1
x
x <- c(1,3,5)
y <- c(3,2,10)
(x,y)
x <- c(1, 3, 5)
y <- c(3, 2, 10)
(x,y)
a <- c(1, 3, 5)
b <- c(3, 2, 10)
(a,b)
cbind(a,b)
c <- list(2,"a","b",TRUE)
C[[2]]
c[[2]]
x <-1:4
y <-2:3
x+y
class(x+y)
install.packages('dplyr')
install.packages('ggplot2')
install.packages('AER')
install.packages('rpart')
install.packages('rpart.plot')
setwd("C:/Labs_ML/Kaggle/C01/data")
a.model <- "Current dev"
titanic.train <- read.csv(file = "train.csv", stringsAsFactors = FALSE, header = TRUE)
titanic.test <- read.csv(file = "test.csv", stringsAsFactors = FALSE, header = TRUE)
str(titanic.train)
str(titanic.test)
titanic.test$Survived <- NA
titanic.train$IsTrainSet <- TRUE
titanic.test$IsTrainSet <- FALSE
titanic.full <- rbind(titanic.train, titanic.test)
str(titanic.full)
tail(titanic.full)
features.names.rawData <- colnames(titanic.full)
features.names.rawData
sapply(titanic.full, function(x) any(is.na(x)) )
sapply(titanic.full, function(x) any(x=="") )
sapply(titanic.full, function(x) any(is.na(x))|any(x=="") )
sapply(titanic.full, class)
sort(sapply(titanic.full, function(x) any(is.na(x))|any(x=="") ), decreasing = TRUE)
table(titanic.full$Embarked)
titanic.full$Embarked_IsMissing <- ifelse(is.na(titanic.full$Embarked), TRUE, FALSE)
ID.NAvalues.Embarked <- which(titanic.full$Embarked=='')
ID.NAvalues.Embarked
titanic.full[62,]
titanic.full[830,]
titanic.full$Embarked==""
table(titanic.full$Embarked)
table(titanic.full$Survived, titanic.full$Embarked)
prop.table(table(titanic.full$Survived, titanic.full$Embarked), 2)
titanic.full$Embarked <- as.factor(titanic.full$Embarked)
table(titanic.full$Name=="")
table(is.na(titanic.full$Name))
titanic.full$Surname <- sapply(as.character(titanic.full$Name), function(x) {strsplit(x, split='[,."()]')[[1]][1]});
titanic.full$Surname <- as.factor(titanic.full$Surname)
sort(table(titanic.full$Surname), decreasing = TRUE)
length(unique(titanic.full$Surname))
titanic.full$Title <- sapply(as.character(titanic.full$Name), function(x) {strsplit(x, split='[,."()]')[[1]][2]})
titanic.full$Title <- sapply(as.character(titanic.full$Title), function (x)  sub("^\\s+", "", x))
sort(table(titanic.full$Title), decreasing = TRUE)
colnames(titanic.full)
Titles_bySex_byAge <- titanic.full[ c("Title", "Sex", "Surname", "Name", "Age", "SibSp", "Parch", "Ticket",  "Cabin")]
View(Titles_bySex_byAge)
aggregate(Age ~ Sex + Title, titanic.full, mean)
aggregate(Age ~ Sex + Title, titanic.full, length)
aggregate(Survived ~ Title, titanic.full, mean)
titanic.full$Title <- as.factor(titanic.full$Title)
unique(titanic.full$Title)
for (i in 1:nrow(titanic.full) ) {
if( (titanic.full$Title[i] %in% c("Mr")) && titanic.full$Sex[i]=="male") {
titanic.full$TitlesGrouped[i] <- "Title_Mr"
} else if
( (titanic.full$Title[i] %in% c("Don", "Dr","Sir","Col","Capt", "Major","Jonkheer")) && titanic.full$Sex[i]=="male") {
titanic.full$TitlesGrouped[i] <- "Title_Sir"
} else if
( (titanic.full$Title[i] %in% c("Rev")) && titanic.full$Sex[i]=="male") {
titanic.full$TitlesGrouped[i] <- "Title_Rev"
} else if
( (titanic.full$Title[i] %in% c("Mrs")) && (titanic.full$Sex[i]=="female")) {
titanic.full$TitlesGrouped[i] <- "Title_Mrs"
} else if
( (titanic.full$Title[i] %in% c("Dr", "the Countess", "Mme", "Lady", "Dona")) && (titanic.full$Sex[i]=="female")) {
titanic.full$TitlesGrouped[i] <- "Title_Lady"
} else if
( (titanic.full$Title[i] %in% c("Miss","Mlle", "Ms"))  && (titanic.full$Sex[i]=="female")) {
titanic.full$TitlesGrouped[i] <- "Title_Miss"
} else if
( (titanic.full$Title[i]=="Master") && (titanic.full$Sex[i]=="male")) {
titanic.full$TitlesGrouped[i] <- "Title_Master"
} else {
titanic.full$TitlesGrouped[i] <- "If-Else_Error"
}
}
table(titanic.full$Survived, titanic.full$TitlesGrouped)
prop.table(table(titanic.full$Survived, titanic.full$TitlesGrouped), 2)
colnames(titanic.full)
Titles_bySex_byAge <- titanic.full[ c("TitlesGrouped", "Sex", "Surname", "Name", "Age", "SibSp", "Parch", "Ticket",  "Cabin")]
View(Titles_bySex_byAge)
aggregate(Age ~ TitlesGrouped, titanic.full, mean)
aggregate(Age ~ TitlesGrouped, titanic.full, length)
aggregate(Age ~ TitlesGrouped, titanic.full, min)
aggregate(Age ~ TitlesGrouped, titanic.full, max)
titanic.full$IsChild <- ifelse(titanic.full$Age < 15, TRUE, FALSE)
table(titanic.full$IsChild)
titanic.full$IsAdult <- ifelse(titanic.full$Age >= 15, TRUE, FALSE)
table(titanic.full$IsAdult)
table(titanic.full$Survived, titanic.full$IsChild)
prop.table(table(titanic.full$Survived, titanic.full$IsChild), 2)
summary(titanic.full[titanic.full$IsChild==TRUE, "Age"])
hist(titanic.full[titanic.full$IsChild==TRUE, "Age"])
colnames(titanic.full)
IsChild_bySex <- titanic.full[ c("IsChild", "TitlesGrouped", "Sex", "Surname", "Age", "SibSp", "Parch", "Cabin", "Ticket")]
View(IsChild_bySex)
aggregate(Survived ~ TitlesGrouped, titanic.full, mean)
aggregate(Survived ~ TitlesGrouped + IsChild, titanic.full, mean)
aggregate(Age ~ TitlesGrouped + IsChild, titanic.full, length)
aggregate(Age ~ TitlesGrouped + IsChild, titanic.full, min)
aggregate(Age ~ TitlesGrouped + IsChild, titanic.full, max)
table(titanic.full$Sex=="")
table(is.na(titanic.full$Sex))
titanic.full$Sex <- as.factor(titanic.full$Sex)
table(titanic.full$Survived, titanic.full$Sex)
table(titanic.full$Sex)
colnames(titanic.full)
Titles_bySex_byAge <- titanic.full[ c("Title", "Sex", "Surname", "Name", "Age", "SibSp", "Parch", "Ticket",  "Cabin")]
View(Titles_bySex_byAge)
rmarkdown::render("Model_inCurrentDevelop.R")
